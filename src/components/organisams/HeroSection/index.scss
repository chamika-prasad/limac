@import "./../../../styles/colors.scss";

// Animation variables
$x: 20; /* number of rows */
$y: 20; /* number of columns */
$s: 3; /* speed factor - 3 seconds for animation */

// Generate CSS custom properties for each grid cell
@for $i from 0 through ($x - 1) {
  @for $j from 0 through ($y - 1) {
    @property --c-#{$i}-#{$j} {
      syntax: "<number>";
      initial-value: 1;
      inherits: false;
    }
  }
}

// Function to generate random transition timing for smoother effect
@function transition($i, $j) {
  @return ($s * 0.3 + random() * $s * 0.7) + s ease-in-out;
}

// Mixin for the pixelated dissolve effect
@mixin pixelated-dissolve() {
  $all_t: ();
  $all_m: ();
  
  @for $i from 0 through ($x - 1) {
    @for $j from 0 through ($y - 1) {
      $all_t: append($all_t, --c-#{$i}-#{$j} transition($i, $j), comma);
      $all_m: append($all_m, linear-gradient(rgba(0, 0, 0, var(--c-#{$i}-#{$j})) 0 0) calc(#{$i} * 100% / (#{$x} - 1)) calc(#{$j} * 100% / (#{$y} - 1)), comma);
    }
  }
  
  transition: $all_t;
  -webkit-mask: $all_m;
  mask: $all_m;
  -webkit-mask-size: calc(100% / #{$x} + 1px) calc(100% / #{$y} + 1px);
  -webkit-mask-repeat: no-repeat;
  mask-size: calc(100% / #{$x} + 1px) calc(100% / #{$y} + 1px);
  mask-repeat: no-repeat;
  -webkit-mask-composite: source-over;
  mask-composite: add;
}

.hero {
  position: relative;
  width: 100%;
  height: 100vh;
  min-height: 600px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: $color-white;
  overflow: hidden;
}

.hero-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

.hero-image {
  object-fit: cover;
  object-position: center;
  @include pixelated-dissolve();
  
  // Initial state - completely hidden
  &.hidden {
    @for $i from 0 through ($x - 1) {
      @for $j from 0 through ($y - 1) {
        --c-#{$i}-#{$j}: 0;
      }
    }
  }
  
  // Appearing state - dissolve in effect with staggered timing
  &.appearing {
    @for $i from 0 through ($x - 1) {
      @for $j from 0 through ($y - 1) {
        --c-#{$i}-#{$j}: 1;
        transition-delay: #{($i + $j) * 0.02}s; // Staggered delay for smoother effect
      }
    }
  }
  
  // Fully visible state - ensure all pixels are visible
  &.visible {
    @for $i from 0 through ($x - 1) {
      @for $j from 0 through ($y - 1) {
        --c-#{$i}-#{$j}: 1;
        transition-delay: 0s; // No delay when fully visible
      }
    }
  }
  
  // Disappearing state - dissolve out effect with reverse staggered timing
  &.disappearing {
    @for $i from 0 through ($x - 1) {
      @for $j from 0 through ($y - 1) {
        --c-#{$i}-#{$j}: 0;
        transition-delay: #{(($x + $y - $i - $j) * 0.02)}s; // Reverse staggered delay
      }
    }
  }
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    rgba($color-charcoal, 0.8) 0%,
    rgba($color-charcoal, 0) 100%
  );
  z-index: 2;
}

.hero-content {
  position: relative;
  z-index: 3;
  max-width: 1200px;
  width: 90%;
  margin: 0 auto;
  text-align: left;
  padding: 2rem;
}

.hero-title {
  font-size: 4rem;
  margin-bottom: 1rem;
  font-size: 64px;
  letter-spacing: 18%;
  letter-spacing: 8px;
  color: $color-light-gray;

  @media (max-width: 768px) {
    font-size: 2.5rem;
  }
}

.company-name {
  font-size: 24px;
  margin-bottom: 2rem;
  color: $color-light-gray;
  letter-spacing: 1px;

  @media (max-width: 768px) {
    font-size: 1.5rem;
  }
}

.description {
  text-align: justify;
}

.hero-text {
  text-align: left;
}

.description {
  line-height: 1.6;
  max-width: 440px;
  color: $color-light-gray;

  @media (max-width: 768px) {
    font-size: 1rem;
  }
}

.cta-button {
  background-color: $color-dark-blue;
  color: $color-light-gray;
  border: none;
  padding: 1rem 2.5rem;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 1px;
  margin-top: 40px;

  &:hover {
    background-color: darken($color-dark-blue, 10%);
    transform: translateY(-3px);
  }

  &:active {
    transform: translateY(0);
  }
}

.cta-text {
  margin: 0;
  color: inherit;
}