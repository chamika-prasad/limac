// index.scss

.collection-gallery {
  display: grid;
  width: 100%;

  // Spacing variants
  &.spacing-small {
    gap: 0.5rem;
  }

  &.spacing-medium {
    gap: 1rem;
  }

  &.spacing-large {
    gap: 1.5rem;
  }

  // Mobile columns (default)
  &.cols-mobile-1 {
    grid-template-columns: 1fr;
  }

  &.cols-mobile-2 {
    grid-template-columns: repeat(2, 1fr);
  }

  &.cols-mobile-3 {
    grid-template-columns: repeat(3, 1fr);
  }

  // Tablet breakpoint
  @media (min-width: 768px) {
    &.cols-tablet-1 {
      grid-template-columns: 1fr;
    }

    &.cols-tablet-2 {
      grid-template-columns: repeat(2, 1fr);
    }

    &.cols-tablet-3 {
      grid-template-columns: repeat(3, 1fr);
    }

    &.cols-tablet-4 {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  // Desktop breakpoint
  @media (min-width: 1024px) {
    &.cols-desktop-1 {
      grid-template-columns: 1fr;
    }

    &.cols-desktop-2 {
      grid-template-columns: repeat(2, 1fr);
    }

    &.cols-desktop-3 {
      grid-template-columns: repeat(3, 1fr);
    }

    &.cols-desktop-4 {
      grid-template-columns: repeat(4, 1fr);
    }

    &.cols-desktop-5 {
      grid-template-columns: repeat(5, 1fr);
    }

    &.cols-desktop-6 {
      grid-template-columns: repeat(6, 1fr);
    }
  }
}

.image-container {
  position: relative;
  overflow: hidden;
  border-radius: 8px;
  cursor: pointer;
  background-color: #f5f5f5;
  transition: transform 0.3s ease, box-shadow 0.3s ease;

  // Force all images to have the same aspect ratio
  aspect-ratio: 1; // This makes all containers square

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);

    .overlay {
      opacity: 1;
    }
  }

  // Override aspect ratio based on gallery setting
  .collection-gallery.aspect-square & {
    aspect-ratio: 1;
  }

  .collection-gallery.aspect-landscape & {
    aspect-ratio: 16/9;
  }

  .collection-gallery.aspect-portrait & {
    aspect-ratio: 3/4;
  }

  .collection-gallery.aspect-auto & {
    aspect-ratio: 1; // Even for auto, maintain consistent sizing
  }
}

.image {
  width: 100%;
  height: 100%;
  object-fit: cover; // This ensures the image covers the entire container
  object-position: center; // Centers the image within the container
  display: block;
  transition: transform 0.3s ease;

  .image-container:hover & {
    transform: scale(1.05);
  }
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.4);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.overlay-icon {
  color: white;
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  backdrop-filter: blur(10px);
}

// Lightbox styles
.lightbox {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 2rem;

  @media (max-width: 768px) {
    padding: 1rem;
  }
}

.lightbox-content {
  position: relative;
  max-width: 90vw;
  max-height: 90vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.lightbox-image-container {
  position: relative;
  max-width: 100%;
  max-height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;

  // Ensure lightbox images also have consistent sizing
  width: 80vw;
  height: 80vh;
  max-width: 800px;
  max-height: 600px;
}

.lightbox-image {
  width: 100%;
  height: 100%;
  object-fit: contain; // Use contain in lightbox to show full image
  object-position: center;
  border-radius: 4px;
}

.close-button {
  position: absolute;
  top: -3rem;
  right: -100;
  background: rgba(255, 255, 255, 0.1);
  border: none;
  color: white;
  width: 48px;
  height: 48px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.3s ease;
  backdrop-filter: blur(10px);

  &:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  @media (max-width: 768px) {
    top: -2.5rem;
    width: 40px;
    height: 40px;
  }
}

.nav-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(255, 255, 255, 0.1);
  border: none;
  color: white;
  width: 48px;
  height: 48px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.3s ease, opacity 0.3s ease;
  backdrop-filter: blur(10px);

  &:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  &.prev-button {
    left: -4rem;

    @media (max-width: 768px) {
      left: -3rem;
    }
  }

  &.next-button {
    right: -4rem;

    @media (max-width: 768px) {
      right: -3rem;
    }
  }

  @media (max-width: 768px) {
    width: 40px;
    height: 40px;
  }

  @media (max-width: 480px) {
    &.prev-button {
      left: 1rem;
    }

    &.next-button {
      right: 1rem;
    }
  }
}

.image-counter {
  position: absolute;
  bottom: -3rem;
  left: 50%;
  transform: translateX(-50%);
  color: white;
  background: rgba(0, 0, 0, 0.5);
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-size: 0.875rem;
  backdrop-filter: blur(10px);

  @media (max-width: 768px) {
    bottom: -2.5rem;
    font-size: 0.8rem;
    padding: 0.4rem 0.8rem;
  }
}

.empty-state {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 3rem;
  color: #666;
  background: #f9f9f9;
  border-radius: 8px;
  border: 2px dashed #ddd;

  p {
    margin: 0;
    font-size: 1.1rem;
  }
}
